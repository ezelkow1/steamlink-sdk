diff -ruN -x .git kodi.old/configure.ac kodi/configure.ac
--- kodi.old/configure.ac	2016-01-31 01:08:43.988534081 -0800
+++ kodi/configure.ac	2016-01-31 01:09:16.353783633 -0800
@@ -1659,7 +1659,7 @@
 
 if test "${USE_STATIC_FFMPEG}" = "1"; then
   # get the libdir for static linking
-  FFMPEG_LIBDIR=${pkg_cfg_prefix}$(PKG_CONFIG_SYSROOT_DIR="" ${PKG_CONFIG} --static --variable=libdir libavcodec)
+  FFMPEG_LIBDIR=$(${PKG_CONFIG} --static --variable=libdir libavcodec)
   GNUTLS_ALL_LIBS=$(${PKG_CONFIG} --static --libs-only-l --silence-errors gnutls)
   VORBISENC_ALL_LIBS=$(${PKG_CONFIG} --static --libs-only-l --silence-errors vorbisenc)
   DCADEC_ALL_LIBS=$(${PKG_CONFIG} --static --libs-only-l --silence-errors dcadec)
diff -ruN -x .git kodi.old/system/keymaps/joystick.Steam.Controller.xml kodi/system/keymaps/joystick.Steam.Controller.xml
--- kodi.old/system/keymaps/joystick.Steam.Controller.xml	1969-12-31 16:00:00.000000000 -0800
+++ kodi/system/keymaps/joystick.Steam.Controller.xml	2016-01-31 01:09:07.497441614 -0800
@@ -0,0 +1,330 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This file contains the mappings for a Steam Controller to actions within XBMC    -->
+<!-- The <global> section is a fall through - they will only be used if the button is not          -->
+<!-- used in the current window's section.  Note that there is only handling                       -->
+<!-- for a single action per button at this stage.                                                 -->
+
+<!-- The format of a mapping is:                                -->
+<!--    <device name="name">                                    -->
+<!--      <button id="x">action</button>                        -->
+<!--      <axis id="x" limit="y">action</axis>                  -->
+<!--      <hat id="1" position="left">action</hat>              -->
+<!--    </device>                                               -->
+
+<!-- Note that the action can be a built-in function.           -->
+<!-- eg <button id="x">ActivateWindow(Home)</button>       -->
+<!-- would automatically go to Home on the press of button 'x'. -->
+
+<!-- Joystick Name: Steam Controller
+
+<!-- Button Mappings on Steam Link:            -->
+<!--                                           -->
+<!-- ID              Button                    -->
+<!--                                           -->
+<!-- 1               A                         -->
+<!-- 2               B                         -->
+<!-- 3               X                         -->
+<!-- 4               Y                         -->
+<!-- 5               Left Shoulder             -->
+<!-- 6               Right Shoulder            -->
+<!-- 7               Back                      -->
+<!-- 8               Start                     -->
+<!-- 9               Guide                     -->
+<!-- 10              Left Stick Button         -->
+<!-- 11              Right Grip                -->
+<!-- 12              Left Grip                 -->
+
+<!-- Axis Mappings:                   -->
+<!--                                  -->
+<!-- ID              Button           -->
+<!--                                  -->
+<!-- 1               Left Stick L/R   -->
+<!-- 2               Left Stick U/D   -->
+<!-- 3               Left Trigger     -->
+<!-- 4               Right Trigger    -->
+
+<keymap>
+  <joystickFamily name="Steam Controller">
+     <name>Steam Controller</name>
+  </joystickFamily>
+  <global>
+    <joystick family="Steam Controller">
+      <button id="1">Select</button>
+      <button id="2">Back</button>
+      <button id="3">ContextMenu</button>
+      <button id="4">FullScreen</button>
+      <button id="5">Queue</button>
+      <button id="6">Playlist</button>
+      <button id="7">PreviousMenu</button>
+      <button id="8">ActivateWindow(Home)</button>
+      <button id="9">ActivateWindow(Home)</button>
+      <button id="10">ActivateWindow(ShutdownMenu)</button>
+      <button id="11">VolumeUp</button>
+      <button id="12">VolumeDown</button>
+      <axis id="1" limit="-1">AnalogSeekBack</axis>
+      <axis id="1" limit="+1">AnalogSeekForward</axis>
+      <axis id="3" limit="+1">ScrollUp</axis>
+      <axis id="4" limit="+1">ScrollDown</axis>
+      <hat id="1" position="up">Up</hat>
+      <hat id="1" position="down">Down</hat>
+      <hat id="1" position="left">Left</hat>
+      <hat id="1" position="right">Right</hat>
+    </joystick>
+  </global>
+  <Home>
+    <joystick family="Steam Controller">
+      <button id="8">Skin.ToggleSetting(HomeViewToggle)</button>
+    </joystick>
+  </Home>
+  <MyFiles>
+    <joystick family="Steam Controller">
+      <button id="6">Highlight</button>
+    </joystick>
+  </MyFiles>
+  <MyMusicPlaylist>
+    <joystick family="Steam Controller">
+      <button id="5">Delete</button>
+    </joystick>
+  </MyMusicPlaylist>
+  <MyMusicFiles>
+  </MyMusicFiles>
+  <MyMusicLibrary>
+  </MyMusicLibrary>
+  <FullscreenVideo>
+    <joystick family="Steam Controller">
+      <button id="1">Pause</button>
+      <button id="2">Stop</button>
+      <button id="3">OSD</button>
+      <button id="5">AspectRatio</button>
+      <button id="6">ShowSubtitles</button>
+      <button id="7">Seek(-7)</button><!-- Replaces smallstepback -->
+      <button id="8">Info</button>
+      <button id="9">ActivateWindow(Home)</button>  <!-- guide -->
+      <button id="10">ActivateWindow(ShutdownMenu)</button>  <!-- left stick -->
+      <axis id="3" limit="+1">AnalogRewind</axis>
+      <axis id="4" limit="+1">AnalogFastForward</axis>
+      <hat id="1" position="up">ChapterOrBigStepForward</hat>
+      <hat id="1" position="down">ChapterOrBigStepBack</hat>
+      <hat id="1" position="left">StepBack</hat>
+      <hat id="1" position="right">StepForward</hat>
+    </joystick>
+  </FullscreenVideo>
+  <FullscreenLiveTV>
+    <joystick family="Steam Controller">
+      <hat id="1" position="up">ChannelUp</hat>
+      <hat id="1" position="down">ChannelDown</hat>
+      <hat id="1" position="left">StepBack</hat>
+      <hat id="1" position="right">StepForward</hat>
+    </joystick>
+  </FullscreenLiveTV>
+  <FullscreenRadio>
+    <joystick family="Steam Controller">
+      <hat id="1" position="up">ChannelUp</hat>
+      <hat id="1" position="down">ChannelDown</hat>
+      <hat id="1" position="left">StepBack</hat>
+      <hat id="1" position="right">StepForward</hat>
+    </joystick>
+  </FullscreenRadio>
+  <FullscreenInfo>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+      <button id="3">OSD</button>
+      <button id="8">Close</button>
+      <axis id="3" limit="+1">AnalogRewind</axis>
+      <axis id="4" limit="+1">AnalogFastForward</axis>
+    </joystick>
+  </FullscreenInfo>
+  <PlayerControls>
+    <joystick family="Steam Controller">
+      <button id="3">Close</button>
+      <button id="10">Close</button>
+    </joystick>
+  </PlayerControls>
+  <Visualisation>
+    <joystick family="Steam Controller">
+      <button id="1">Pause</button>
+      <button id="2">Stop</button>
+      <button id="3">ActivateWindow(MusicOSD)</button>
+      <button id="5">ActivateWindow(VisualisationPresetList)</button>
+      <button id="6">Info</button>
+      <axis id="3" limit="+1">AnalogRewind</axis>
+      <axis id="4" limit="+1">AnalogFastForward</axis>
+      <hat id="1" position="up">SkipNext</hat>
+      <hat id="1" position="down">SkipPrevious</hat>
+      <hat id="1" position="left">PreviousPreset</hat>
+      <hat id="1" position="right">NextPreset</hat>
+    </joystick>
+  </Visualisation>
+  <MusicOSD>
+    <joystick family="Steam Controller">
+      <button id="3">Close</button>
+      <button id="6">Info</button>
+    </joystick>
+  </MusicOSD>
+  <VisualisationSettings>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+    </joystick>
+  </VisualisationSettings>
+  <VisualisationPresetList>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+    </joystick>
+  </VisualisationPresetList>
+  <SlideShow>
+    <joystick family="Steam Controller">
+      <button id="1">Pause</button>
+      <button id="2">Stop</button>
+      <button id="4">ZoomNormal</button>
+      <button id="5">Rotate</button>
+      <button id="6">CodecInfo</button>
+      <axis id="1">AnalogMoveX</axis>
+      <axis id="2">AnalogMoveY</axis>
+      <axis id="3" limit="+1">ZoomOut</axis>
+      <axis id="4" limit="+1">ZoomIn</axis>
+      <hat id="1" position="up">ZoomIn</hat>
+      <hat id="1" position="down">ZoomOut</hat>
+      <hat id="1" position="left">PreviousPicture</hat>
+      <hat id="1" position="right">NextPicture</hat>
+    </joystick>
+  </SlideShow>
+  <ScreenCalibration>
+    <joystick family="Steam Controller">
+      <button id="3">ResetCalibration</button>
+      <button id="5">NextResolution</button>
+      <button id="6">NextCalibration</button>
+    </joystick>
+  </ScreenCalibration>
+  <GUICalibration>
+    <joystick family="Steam Controller">
+      <button id="3">ResetCalibration</button>
+      <button id="5">NextResolution</button>
+      <button id="6">NextCalibration</button>
+    </joystick>
+  </GUICalibration>
+  <VideoOSD>
+    <joystick family="Steam Controller">
+      <button id="3">Close</button>
+    </joystick>
+  </VideoOSD>
+  <VideoMenu>
+    <joystick family="Steam Controller">
+      <button id="2">Stop</button>
+      <button id="3">OSD</button>
+      <button id="5">AspectRatio</button>
+      <button id="8">Info</button>
+    </joystick>
+  </VideoMenu>
+  <OSDVideoSettings>
+    <joystick family="Steam Controller">
+      <button id="5">AspectRatio</button>
+      <button id="3">Close</button>
+    </joystick>
+  </OSDVideoSettings>
+  <OSDAudioSettings>
+    <joystick family="Steam Controller">
+      <button id="5">AspectRatio</button>
+      <button id="3">Close</button>
+    </joystick>
+  </OSDAudioSettings>
+  <VideoBookmarks>
+    <joystick family="Steam Controller">
+      <button id="5">Delete</button>
+    </joystick>
+  </VideoBookmarks>
+  <MyVideoLibrary>
+  </MyVideoLibrary>
+  <MyVideoFiles>
+  </MyVideoFiles>
+  <MyVideoPlaylist>
+    <joystick family="Steam Controller">
+      <button id="5">Delete</button>
+    </joystick>
+  </MyVideoPlaylist>
+  <VirtualKeyboard>
+    <joystick family="Steam Controller">
+      <button id="2">BackSpace</button>
+      <button id="4">Symbols</button>
+      <button id="5">Shift</button>
+      <button id="10">Enter</button>
+      <axis id="3" limit="+1">CursorLeft</axis>
+      <axis id="4" limit="+1">CursorRight</axis>
+    </joystick>
+  </VirtualKeyboard>
+  <ContextMenu>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+      <button id="3">Close</button>
+    </joystick>
+  </ContextMenu>
+  <Scripts>
+    <joystick family="Steam Controller">
+      <button id="3">ContextMenu</button>
+    </joystick>
+  </Scripts>
+  <Settings>
+    <joystick family="Steam Controller">
+      <button id="2">PreviousMenu</button>
+    </joystick>
+  </Settings>
+  <AddonInformation>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+    </joystick>
+  </AddonInformation>
+  <AddonSettings>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+    </joystick>
+  </AddonSettings>
+  <TextViewer>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+    </joystick>
+  </TextViewer>
+  <shutdownmenu>
+    <joystick family="Steam Controller">
+      <button id="2">PreviousMenu</button>
+      <button id="10">PreviousMenu</button>
+    </joystick>
+  </shutdownmenu>
+  <submenu>
+    <joystick family="Steam Controller">
+      <button id="2">PreviousMenu</button>
+    </joystick>
+  </submenu>
+  <MusicInformation>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+    </joystick>
+  </MusicInformation>
+  <MovieInformation>
+    <joystick family="Steam Controller">
+      <button id="2">Close</button>
+    </joystick>
+  </MovieInformation>
+  <NumericInput>
+    <joystick family="Steam Controller">
+      <button id="2">BackSpace</button>
+      <button id="10">Enter</button>
+    </joystick>
+  </NumericInput>
+  <GamepadInput>
+    <joystick family="Steam Controller">
+      <button id="10">Stop</button>
+    </joystick>
+  </GamepadInput>
+  <LockSettings>
+    <joystick family="Steam Controller">
+      <button id="2">PreviousMenu</button>
+      <button id="10">Close</button>
+    </joystick>
+  </LockSettings>
+  <ProfileSettings>
+    <joystick family="Steam Controller">
+      <button id="2">PreviousMenu</button>
+      <button id="10">Close</button>
+    </joystick>
+  </ProfileSettings>
+</keymap>
+</keymap>
diff -ruN -x .git kodi.old/tools/depends/target/ffmpeg/Makefile kodi/tools/depends/target/ffmpeg/Makefile
--- kodi.old/tools/depends/target/ffmpeg/Makefile	2016-01-31 01:08:45.236582260 -0800
+++ kodi/tools/depends/target/ffmpeg/Makefile	2016-01-31 01:09:16.353783633 -0800
@@ -8,7 +8,7 @@
 
 # configuration settings
 ffmpg_config = --prefix=$(PREFIX) --extra-version="kodi-$(VERSION)"
-ffmpg_config += --cc=$(CC) --cxx=$(CXX) --ar=$(AR) --ranlib=$(RANLIB)
+ffmpg_config += --cc="$(CC)" --cxx="$(CXX)" --ar=$(AR) --ranlib=$(RANLIB)
 ffmpg_config += --disable-devices --disable-doc
 ffmpg_config += --disable-ffplay --disable-ffmpeg --disable-sdl
 ffmpg_config += --disable-ffprobe --disable-ffserver
diff -ruN -x .git kodi.old/tools/depends/target/Makefile kodi/tools/depends/target/Makefile
--- kodi.old/tools/depends/target/Makefile	2016-01-31 01:08:45.232582106 -0800
+++ kodi/tools/depends/target/Makefile	2016-01-31 01:09:16.357783789 -0800
@@ -127,41 +127,41 @@
 	for d in $(DEPENDS); do $(MAKE) -C $$d distclean; done
 
 linux-system-libs-egl:
-	[ -f $(PREFIX)/lib/pkgconfig/egl.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/egl.pc $(PREFIX)/lib/pkgconfig/egl.pc
-	[ -f $(PREFIX)/lib/pkgconfig/damageproto.pc ] || ln -s  /usr/share/pkgconfig/damageproto.pc $(PREFIX)/lib/pkgconfig/damageproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/fixesproto.pc ] || ln -s  /usr/share/pkgconfig/fixesproto.pc $(PREFIX)/lib/pkgconfig/fixesproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/x11-xcb.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/x11-xcb.pc $(PREFIX)/lib/pkgconfig/x11-xcb.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-dri2.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-dri2.pc $(PREFIX)/lib/pkgconfig/xcb-dri2.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-dri3.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-dri3.pc $(PREFIX)/lib/pkgconfig/xcb-dri3.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-glx.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-glx.pc $(PREFIX)/lib/pkgconfig/xcb-glx.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-xfixes.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-xfixes.pc $(PREFIX)/lib/pkgconfig/xcb-xfixes.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-present.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-present.pc $(PREFIX)/lib/pkgconfig/xcb-present.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-randr.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xcb-randr.pc $(PREFIX)/lib/pkgconfig/xcb-randr.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-render.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xcb-render.pc $(PREFIX)/lib/pkgconfig/xcb-render.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-shape.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-shape.pc $(PREFIX)/lib/pkgconfig/xcb-shape.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb-sync.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-sync.pc $(PREFIX)/lib/pkgconfig/xcb-sync.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xdamage.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xdamage.pc $(PREFIX)/lib/pkgconfig/xdamage.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xf86vidmodeproto.pc ] || ln -s /usr/share/pkgconfig/xf86vidmodeproto.pc $(PREFIX)/lib/pkgconfig/xf86vidmodeproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xfixes.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xfixes.pc $(PREFIX)/lib/pkgconfig/xfixes.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xshmfence.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xshmfence.pc $(PREFIX)/lib/pkgconfig/xshmfence.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xxf86vm.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xxf86vm.pc $(PREFIX)/lib/pkgconfig/xxf86vm.pc
+	[ -L $(PREFIX)/lib/pkgconfig/egl.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/egl.pc $(PREFIX)/lib/pkgconfig/egl.pc
+	[ -L $(PREFIX)/lib/pkgconfig/damageproto.pc ] || ln -s  /usr/share/pkgconfig/damageproto.pc $(PREFIX)/lib/pkgconfig/damageproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/fixesproto.pc ] || ln -s  /usr/share/pkgconfig/fixesproto.pc $(PREFIX)/lib/pkgconfig/fixesproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/x11-xcb.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/x11-xcb.pc $(PREFIX)/lib/pkgconfig/x11-xcb.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-dri2.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-dri2.pc $(PREFIX)/lib/pkgconfig/xcb-dri2.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-dri3.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-dri3.pc $(PREFIX)/lib/pkgconfig/xcb-dri3.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-glx.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-glx.pc $(PREFIX)/lib/pkgconfig/xcb-glx.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-xfixes.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-xfixes.pc $(PREFIX)/lib/pkgconfig/xcb-xfixes.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-present.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-present.pc $(PREFIX)/lib/pkgconfig/xcb-present.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-randr.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xcb-randr.pc $(PREFIX)/lib/pkgconfig/xcb-randr.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-render.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xcb-render.pc $(PREFIX)/lib/pkgconfig/xcb-render.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-shape.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-shape.pc $(PREFIX)/lib/pkgconfig/xcb-shape.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb-sync.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xcb-sync.pc $(PREFIX)/lib/pkgconfig/xcb-sync.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xdamage.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xdamage.pc $(PREFIX)/lib/pkgconfig/xdamage.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xf86vidmodeproto.pc ] || ln -s /usr/share/pkgconfig/xf86vidmodeproto.pc $(PREFIX)/lib/pkgconfig/xf86vidmodeproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xfixes.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xfixes.pc $(PREFIX)/lib/pkgconfig/xfixes.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xshmfence.pc ] || ln -s  /usr/lib/$(HOST)/pkgconfig/xshmfence.pc $(PREFIX)/lib/pkgconfig/xshmfence.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xxf86vm.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xxf86vm.pc $(PREFIX)/lib/pkgconfig/xxf86vm.pc
 
 linux-system-libs: linux-system-libs-egl
-	[ -f $(PREFIX)/lib/pkgconfig/x11.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/x11.pc $(PREFIX)/lib/pkgconfig/x11.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xproto.pc ] || ln -s /usr/share/pkgconfig/xproto.pc $(PREFIX)/lib/pkgconfig/xproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/kbproto.pc ] || ln -s /usr/share/pkgconfig/kbproto.pc $(PREFIX)/lib/pkgconfig/kbproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xcb.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xcb.pc $(PREFIX)/lib/pkgconfig/xcb.pc
-	[ -f $(PREFIX)/lib/pkgconfig/pthread-stubs.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/pthread-stubs.pc $(PREFIX)/lib/pkgconfig/pthread-stubs.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xau.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xau.pc $(PREFIX)/lib/pkgconfig/xau.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xdmcp.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xdmcp.pc $(PREFIX)/lib/pkgconfig/xdmcp.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xext.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xext.pc $(PREFIX)/lib/pkgconfig/xext.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xextproto.pc ] || ln -s /usr/share/pkgconfig/xextproto.pc $(PREFIX)/lib/pkgconfig/xextproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xrandr.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xrandr.pc $(PREFIX)/lib/pkgconfig/xrandr.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xrender.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xrender.pc $(PREFIX)/lib/pkgconfig/xrender.pc
-	[ -f $(PREFIX)/lib/pkgconfig/randrproto.pc ] || ln -s /usr/share/pkgconfig/randrproto.pc $(PREFIX)/lib/pkgconfig/randrproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/renderproto.pc ] || ln -s /usr/share/pkgconfig/renderproto.pc $(PREFIX)/lib/pkgconfig/renderproto.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xt.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xt.pc $(PREFIX)/lib/pkgconfig/xt.pc
-	[ -f $(PREFIX)/lib/pkgconfig/ice.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/ice.pc $(PREFIX)/lib/pkgconfig/ice.pc
-	[ -f $(PREFIX)/lib/pkgconfig/sm.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/sm.pc $(PREFIX)/lib/pkgconfig/sm.pc
-	[ -f $(PREFIX)/lib/pkgconfig/xmu.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xmu.pc $(PREFIX)/lib/pkgconfig/xmu.pc
-	[ -f $(PREFIX)/lib/pkgconfig/libdrm.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/libdrm.pc $(PREFIX)/lib/pkgconfig/libdrm.pc
+	[ -L $(PREFIX)/lib/pkgconfig/x11.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/x11.pc $(PREFIX)/lib/pkgconfig/x11.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xproto.pc ] || ln -s /usr/share/pkgconfig/xproto.pc $(PREFIX)/lib/pkgconfig/xproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/kbproto.pc ] || ln -s /usr/share/pkgconfig/kbproto.pc $(PREFIX)/lib/pkgconfig/kbproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xcb.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xcb.pc $(PREFIX)/lib/pkgconfig/xcb.pc
+	[ -L $(PREFIX)/lib/pkgconfig/pthread-stubs.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/pthread-stubs.pc $(PREFIX)/lib/pkgconfig/pthread-stubs.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xau.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xau.pc $(PREFIX)/lib/pkgconfig/xau.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xdmcp.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xdmcp.pc $(PREFIX)/lib/pkgconfig/xdmcp.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xext.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xext.pc $(PREFIX)/lib/pkgconfig/xext.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xextproto.pc ] || ln -s /usr/share/pkgconfig/xextproto.pc $(PREFIX)/lib/pkgconfig/xextproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xrandr.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xrandr.pc $(PREFIX)/lib/pkgconfig/xrandr.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xrender.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xrender.pc $(PREFIX)/lib/pkgconfig/xrender.pc
+	[ -L $(PREFIX)/lib/pkgconfig/randrproto.pc ] || ln -s /usr/share/pkgconfig/randrproto.pc $(PREFIX)/lib/pkgconfig/randrproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/renderproto.pc ] || ln -s /usr/share/pkgconfig/renderproto.pc $(PREFIX)/lib/pkgconfig/renderproto.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xt.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xt.pc $(PREFIX)/lib/pkgconfig/xt.pc
+	[ -L $(PREFIX)/lib/pkgconfig/ice.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/ice.pc $(PREFIX)/lib/pkgconfig/ice.pc
+	[ -L $(PREFIX)/lib/pkgconfig/sm.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/sm.pc $(PREFIX)/lib/pkgconfig/sm.pc
+	[ -L $(PREFIX)/lib/pkgconfig/xmu.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xmu.pc $(PREFIX)/lib/pkgconfig/xmu.pc
+	[ -L $(PREFIX)/lib/pkgconfig/libdrm.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/libdrm.pc $(PREFIX)/lib/pkgconfig/libdrm.pc
diff -ruN -x .git kodi.old/tools/depends/target/openssl/Makefile kodi/tools/depends/target/openssl/Makefile
--- kodi.old/tools/depends/target/openssl/Makefile	2016-01-31 01:08:45.252582878 -0800
+++ kodi/tools/depends/target/openssl/Makefile	2016-01-31 01:09:16.353783633 -0800
@@ -35,1 +35,1 @@
-	cd $(PLATFORM); AR="$(AR)" CFLAGS="$(CFLAGS)" CC=$(CC) RANLIB=$(RANLIB) $(CONFIGURE)
+	cd $(PLATFORM); AR="$(AR)" CFLAGS="$(CFLAGS)" CC="$(CC)" RANLIB=$(RANLIB) $(CONFIGURE)
diff -ruN -x .git kodi.old/xbmc/windowing/egl/EGLNativeTypeSDL.cpp kodi/xbmc/windowing/egl/EGLNativeTypeSDL.cpp
--- kodi.old/xbmc/windowing/egl/EGLNativeTypeSDL.cpp	1969-12-31 16:00:00.000000000 -0800
+++ kodi/xbmc/windowing/egl/EGLNativeTypeSDL.cpp	2016-01-31 12:09:24.467043036 -0800
@@ -0,0 +1,161 @@
+/*
+ *      Copyright (C) 2011-2013 Team XBMC
+ *      http://xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+#include "system.h"
+
+#include "EGLNativeTypeSDL.h"
+#include "guilib/gui3d.h"
+#include "utils/log.h"
+#include "utils/StringUtils.h"
+
+#if HAVE_SDL_VERSION == 2
+
+CEGLNativeTypeSDL::CEGLNativeTypeSDL()
+{
+  m_window = NULL;
+
+  if (SDL_InitSubSystem(SDL_INIT_VIDEO) < 0) {
+    return;
+  }
+
+  SDL_DisplayMode mode;
+  SDL_GetDesktopDisplayMode(0, &mode);
+
+  m_window = SDL_CreateWindow("SDL", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, mode.w, mode.h, SDL_WINDOW_FULLSCREEN|SDL_WINDOW_HIDDEN);
+  if (!m_window) {
+    return;
+  }
+
+  SDL_VERSION(&m_windowInfo.version);
+  if (SDL_GetWindowWMInfo(m_window, &m_windowInfo) < 0 || m_windowInfo.subsystem != SDL_SYSWM_VIVANTE) {
+    SDL_DestroyWindow(m_window);
+    m_window = NULL;
+  }
+
+  // XBMC draws its own cursor
+  SDL_ShowCursor(0);
+}
+
+CEGLNativeTypeSDL::~CEGLNativeTypeSDL()
+{
+  if (m_window) {
+    SDL_DestroyWindow(m_window);
+  }
+  SDL_QuitSubSystem(SDL_INIT_VIDEO);
+} 
+
+bool CEGLNativeTypeSDL::CheckCompatibility()
+{
+  return (m_window != NULL);
+}
+
+void CEGLNativeTypeSDL::Initialize()
+{
+}
+
+void CEGLNativeTypeSDL::Destroy()
+{
+}
+
+bool CEGLNativeTypeSDL::CreateNativeDisplay()
+{
+  return true;
+}
+
+bool CEGLNativeTypeSDL::CreateNativeWindow()
+{
+  SDL_ShowWindow(m_window);
+  return true;
+}
+
+bool CEGLNativeTypeSDL::GetNativeDisplay(XBNativeDisplayType **nativeDisplay) const
+{
+  if (!nativeDisplay)
+    return false;
+  *nativeDisplay = (XBNativeDisplayType*) &m_windowInfo.info.vivante.display;
+  return true;
+}
+
+bool CEGLNativeTypeSDL::GetNativeWindow(XBNativeDisplayType **nativeWindow) const
+{
+  if (!nativeWindow)
+    return false;
+  *nativeWindow = (XBNativeWindowType*) &m_windowInfo.info.vivante.window;
+  return true;
+}  
+
+bool CEGLNativeTypeSDL::DestroyNativeDisplay()
+{
+  return true;
+}
+
+bool CEGLNativeTypeSDL::DestroyNativeWindow()
+{
+  SDL_HideWindow(m_window);
+  return true;
+}
+
+bool CEGLNativeTypeSDL::GetNativeResolution(RESOLUTION_INFO *res) const
+{
+  SDL_GetWindowSize(m_window, &res->iWidth, &res->iHeight);
+  res->fRefreshRate = 59.94f;
+  res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+  res->iScreen = 0;
+  res->bFullScreen = true;
+  res->iSubtitles = static_cast<int>(0.965 * res->iHeight);
+  res->fPixelRatio = 1.0f;
+  res->iScreenWidth = res->iWidth;
+  res->iScreenHeight = res->iHeight;
+  res->strMode = StringUtils::Format("%dx%d @ %.2fp",
+                     res->iScreenWidth,
+                     res->iScreenHeight,
+                     res->fRefreshRate);
+  return true;
+}
+
+bool CEGLNativeTypeSDL::SetNativeResolution(const RESOLUTION_INFO &res)
+{
+  return true;
+}
+
+bool CEGLNativeTypeSDL::ProbeResolutions(std::vector<RESOLUTION_INFO> &resolutions)
+{
+  RESOLUTION_INFO res;
+  if (!GetNativeResolution(&res))
+    return false;
+
+  resolutions.push_back(res);
+  return true;
+}
+
+bool CEGLNativeTypeSDL::GetPreferredResolution(RESOLUTION_INFO *res) const
+{
+  return GetNativeResolution(res);
+}
+
+bool CEGLNativeTypeSDL::ShowWindow(bool show)
+{
+  if (show)
+    SDL_ShowWindow(m_window);
+  else
+    SDL_HideWindow(m_window);
+  return true;
+}
+
+#endif // SDL 2.0
diff -ruN -x .git kodi.old/xbmc/windowing/egl/EGLNativeTypeSDL.h kodi/xbmc/windowing/egl/EGLNativeTypeSDL.h
--- kodi.old/xbmc/windowing/egl/EGLNativeTypeSDL.h	1969-12-31 16:00:00.000000000 -0800
+++ kodi/xbmc/windowing/egl/EGLNativeTypeSDL.h	2016-01-31 01:09:16.353783633 -0800
@@ -0,0 +1,60 @@
+#pragma once
+
+/*
+ *      Copyright (C) 2011-2013 Team XBMC
+ *      http://xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#if HAVE_SDL_VERSION == 2
+
+#include "EGLNativeType.h"
+#include "SDL2/SDL.h"
+#include "SDL2/SDL_syswm.h"
+
+class CEGLNativeTypeSDL : public CEGLNativeType
+{
+public:
+  CEGLNativeTypeSDL();
+  virtual ~CEGLNativeTypeSDL();
+  virtual std::string GetNativeName() const { return "SDL"; };
+  virtual bool  CheckCompatibility();
+  virtual void  Initialize();
+  virtual void  Destroy();
+  virtual int   GetQuirks() { return EGL_QUIRK_NONE; };
+
+  virtual bool  CreateNativeDisplay();
+  virtual bool  CreateNativeWindow();
+  virtual bool  GetNativeDisplay(XBNativeDisplayType **nativeDisplay) const;
+  virtual bool  GetNativeWindow(XBNativeWindowType **nativeWindow) const;
+
+  virtual bool  DestroyNativeWindow();
+  virtual bool  DestroyNativeDisplay();
+
+  virtual bool  GetNativeResolution(RESOLUTION_INFO *res) const;
+  virtual bool  SetNativeResolution(const RESOLUTION_INFO &res);
+  virtual bool  ProbeResolutions(std::vector<RESOLUTION_INFO> &resolutions);
+  virtual bool  GetPreferredResolution(RESOLUTION_INFO *res) const;
+
+  virtual bool  ShowWindow(bool show);
+
+private:
+  SDL_Window *m_window;
+  SDL_SysWMinfo m_windowInfo;
+};
+
+#endif // SDL 2.0
diff -ruN -x .git kodi.old/xbmc/windowing/egl/EGLWrapper.cpp kodi/xbmc/windowing/egl/EGLWrapper.cpp
--- kodi.old/xbmc/windowing/egl/EGLWrapper.cpp	2016-01-31 01:08:45.704600327 -0800
+++ kodi/xbmc/windowing/egl/EGLWrapper.cpp	2016-01-31 01:09:16.357783789 -0800
@@ -34,6 +34,7 @@
   #include "EGLNativeTypeIMX.h"
 #endif
 #include "EGLNativeTypeAmlogic.h"
+#include "EGLNativeTypeSDL.h"
 #include "EGLWrapper.h"
 
 #define CheckError() m_result = eglGetError(); if(m_result != EGL_SUCCESS) CLog::Log(LOGERROR, "EGL error in %s: %x",__FUNCTION__, m_result);
@@ -88,6 +89,9 @@
   // Try to create each backend in sequence and go with the first one
   // that we know will work
   if (
+#if HAVE_SDL_VERSION == 2
+      (nativeGuess = CreateEGLNativeType<CEGLNativeTypeSDL>(implementation)) ||
+#endif
 #if defined(TARGET_ANDROID)
       (nativeGuess = CreateEGLNativeType<CEGLNativeTypeAmlAndroid>(implementation)) ||
       (nativeGuess = CreateEGLNativeType<CEGLNativeTypeRKAndroid>(implementation)) ||
diff -ruN -x .git kodi.old/xbmc/windowing/egl/Makefile.in kodi/xbmc/windowing/egl/Makefile.in
--- kodi.old/xbmc/windowing/egl/Makefile.in	2016-01-31 01:08:45.704600327 -0800
+++ kodi/xbmc/windowing/egl/Makefile.in	2016-01-31 01:09:16.357783789 -0800
@@ -1,6 +1,7 @@
 INCLUDES=-I.
 
 SRCS = WinSystemEGL.cpp
+SRCS+= EGLNativeTypeSDL.cpp
 SRCS+= EGLNativeTypeAmlogic.cpp
 ifeq (@USE_ANDROID@,1)
 SRCS+= EGLNativeTypeAndroid.cpp
diff -ruN -x .git kodi.old/xbmc/windowing/WinEventsSDL.cpp kodi/xbmc/windowing/WinEventsSDL.cpp
--- kodi.old/xbmc/windowing/WinEventsSDL.cpp	2016-01-31 01:08:45.700600173 -0800
+++ kodi/xbmc/windowing/WinEventsSDL.cpp	2016-01-31 11:32:59.601334878 -0800
@@ -39,7 +39,7 @@
 #include "platform/darwin/osx/CocoaInterface.h"
 #endif
 
-#if defined(TARGET_POSIX) && !defined(TARGET_DARWIN) && !defined(TARGET_ANDROID)
+#ifdef HAVE_X11
 #include <X11/Xlib.h>
 #include <X11/XKBlib.h>
 #include "input/XBMC_keysym.h"
@@ -48,7 +48,7 @@
 
 using namespace KODI::MESSAGING;
 
-#if defined(TARGET_POSIX) && !defined(TARGET_DARWIN)
+#ifdef HAVE_X11
 // The following chunk of code is Linux specific. For keys that have
 // with keysym.sym set to zero it checks the scan code, and sets the sym
 // for some known scan codes. This is mostly the multimedia keys.
@@ -218,6 +218,276 @@
 }
 #endif // End of checks for keysym.sym == 0
 
+#if HAVE_SDL_VERSION == 2
+// The keysyms changed from SDL 1 to SDL 2, so create a mapping
+static std::map<SDL_Keycode, XBMCKey> s_keysymTable;
+
+static void InitializeKeysymLookup()
+{
+    s_keysymTable[SDLK_RETURN] = XBMCK_RETURN;
+    s_keysymTable[SDLK_ESCAPE] = XBMCK_ESCAPE;
+    s_keysymTable[SDLK_BACKSPACE] = XBMCK_BACKSPACE;
+    s_keysymTable[SDLK_TAB] = XBMCK_TAB;
+    s_keysymTable[SDLK_SPACE] = XBMCK_SPACE;
+    s_keysymTable[SDLK_EXCLAIM] = XBMCK_EXCLAIM;
+    s_keysymTable[SDLK_QUOTEDBL] = XBMCK_QUOTEDBL;
+    s_keysymTable[SDLK_HASH] = XBMCK_HASH;
+    s_keysymTable[SDLK_PERCENT] = XBMCK_PERCENT;
+    s_keysymTable[SDLK_DOLLAR] = XBMCK_DOLLAR;
+    s_keysymTable[SDLK_AMPERSAND] = XBMCK_AMPERSAND;
+    s_keysymTable[SDLK_QUOTE] = XBMCK_QUOTE;
+    s_keysymTable[SDLK_LEFTPAREN] = XBMCK_LEFTPAREN;
+    s_keysymTable[SDLK_RIGHTPAREN] = XBMCK_RIGHTPAREN;
+    s_keysymTable[SDLK_ASTERISK] = XBMCK_ASTERISK;
+    s_keysymTable[SDLK_PLUS] = XBMCK_PLUS;
+    s_keysymTable[SDLK_COMMA] = XBMCK_COMMA;
+    s_keysymTable[SDLK_MINUS] = XBMCK_MINUS;
+    s_keysymTable[SDLK_PERIOD] = XBMCK_PERIOD;
+    s_keysymTable[SDLK_SLASH] = XBMCK_SLASH;
+    s_keysymTable[SDLK_0] = XBMCK_0;
+    s_keysymTable[SDLK_1] = XBMCK_1;
+    s_keysymTable[SDLK_2] = XBMCK_2;
+    s_keysymTable[SDLK_3] = XBMCK_3;
+    s_keysymTable[SDLK_4] = XBMCK_4;
+    s_keysymTable[SDLK_5] = XBMCK_5;
+    s_keysymTable[SDLK_6] = XBMCK_6;
+    s_keysymTable[SDLK_7] = XBMCK_7;
+    s_keysymTable[SDLK_8] = XBMCK_8;
+    s_keysymTable[SDLK_9] = XBMCK_9;
+    s_keysymTable[SDLK_COLON] = XBMCK_COLON;
+    s_keysymTable[SDLK_SEMICOLON] = XBMCK_SEMICOLON;
+    s_keysymTable[SDLK_LESS] = XBMCK_LESS;
+    s_keysymTable[SDLK_EQUALS] = XBMCK_EQUALS;
+    s_keysymTable[SDLK_GREATER] = XBMCK_GREATER;
+    s_keysymTable[SDLK_QUESTION] = XBMCK_QUESTION;
+    s_keysymTable[SDLK_AT] = XBMCK_AT;
+    s_keysymTable[SDLK_LEFTBRACKET] = XBMCK_LEFTBRACKET;
+    s_keysymTable[SDLK_BACKSLASH] = XBMCK_BACKSLASH;
+    s_keysymTable[SDLK_RIGHTBRACKET] = XBMCK_RIGHTBRACKET;
+    s_keysymTable[SDLK_CARET] = XBMCK_CARET;
+    s_keysymTable[SDLK_UNDERSCORE] = XBMCK_UNDERSCORE;
+    s_keysymTable[SDLK_BACKQUOTE] = XBMCK_BACKQUOTE;
+    s_keysymTable[SDLK_a] = XBMCK_a;
+    s_keysymTable[SDLK_b] = XBMCK_b;
+    s_keysymTable[SDLK_c] = XBMCK_c;
+    s_keysymTable[SDLK_d] = XBMCK_d;
+    s_keysymTable[SDLK_e] = XBMCK_e;
+    s_keysymTable[SDLK_f] = XBMCK_f;
+    s_keysymTable[SDLK_g] = XBMCK_g;
+    s_keysymTable[SDLK_h] = XBMCK_h;
+    s_keysymTable[SDLK_i] = XBMCK_i;
+    s_keysymTable[SDLK_j] = XBMCK_j;
+    s_keysymTable[SDLK_k] = XBMCK_k;
+    s_keysymTable[SDLK_l] = XBMCK_l;
+    s_keysymTable[SDLK_m] = XBMCK_m;
+    s_keysymTable[SDLK_n] = XBMCK_n;
+    s_keysymTable[SDLK_o] = XBMCK_o;
+    s_keysymTable[SDLK_p] = XBMCK_p;
+    s_keysymTable[SDLK_q] = XBMCK_q;
+    s_keysymTable[SDLK_r] = XBMCK_r;
+    s_keysymTable[SDLK_s] = XBMCK_s;
+    s_keysymTable[SDLK_t] = XBMCK_t;
+    s_keysymTable[SDLK_u] = XBMCK_u;
+    s_keysymTable[SDLK_v] = XBMCK_v;
+    s_keysymTable[SDLK_w] = XBMCK_w;
+    s_keysymTable[SDLK_x] = XBMCK_x;
+    s_keysymTable[SDLK_y] = XBMCK_y;
+    s_keysymTable[SDLK_z] = XBMCK_z;
+    s_keysymTable[SDLK_CAPSLOCK] = XBMCK_CAPSLOCK;
+    s_keysymTable[SDLK_F1] = XBMCK_F1;
+    s_keysymTable[SDLK_F2] = XBMCK_F2;
+    s_keysymTable[SDLK_F3] = XBMCK_F3;
+    s_keysymTable[SDLK_F4] = XBMCK_F4;
+    s_keysymTable[SDLK_F5] = XBMCK_F5;
+    s_keysymTable[SDLK_F6] = XBMCK_F6;
+    s_keysymTable[SDLK_F7] = XBMCK_F7;
+    s_keysymTable[SDLK_F8] = XBMCK_F8;
+    s_keysymTable[SDLK_F9] = XBMCK_F9;
+    s_keysymTable[SDLK_F10] = XBMCK_F10;
+    s_keysymTable[SDLK_F11] = XBMCK_F11;
+    s_keysymTable[SDLK_F12] = XBMCK_F12;
+    s_keysymTable[SDLK_PRINTSCREEN] = XBMCK_PRINT;
+    s_keysymTable[SDLK_SCROLLLOCK] = XBMCK_SCROLLOCK;
+    s_keysymTable[SDLK_PAUSE] = XBMCK_PAUSE;
+    s_keysymTable[SDLK_INSERT] = XBMCK_INSERT;
+    s_keysymTable[SDLK_HOME] = XBMCK_HOME;
+    s_keysymTable[SDLK_PAGEUP] = XBMCK_PAGEUP;
+    s_keysymTable[SDLK_DELETE] = XBMCK_DELETE;
+    s_keysymTable[SDLK_END] = XBMCK_END;
+    s_keysymTable[SDLK_PAGEDOWN] = XBMCK_PAGEDOWN;
+    s_keysymTable[SDLK_RIGHT] = XBMCK_RIGHT;
+    s_keysymTable[SDLK_LEFT] = XBMCK_LEFT;
+    s_keysymTable[SDLK_DOWN] = XBMCK_DOWN;
+    s_keysymTable[SDLK_UP] = XBMCK_UP;
+    s_keysymTable[SDLK_NUMLOCKCLEAR] = XBMCK_NUMLOCK;
+    s_keysymTable[SDLK_KP_DIVIDE] = XBMCK_KP_DIVIDE;
+    s_keysymTable[SDLK_KP_MULTIPLY] = XBMCK_KP_MULTIPLY;
+    s_keysymTable[SDLK_KP_MINUS] = XBMCK_KP_MINUS;
+    s_keysymTable[SDLK_KP_PLUS] = XBMCK_KP_PLUS;
+    s_keysymTable[SDLK_KP_ENTER] = XBMCK_KP_ENTER;
+    s_keysymTable[SDLK_KP_1] = XBMCK_KP1;
+    s_keysymTable[SDLK_KP_2] = XBMCK_KP2;
+    s_keysymTable[SDLK_KP_3] = XBMCK_KP3;
+    s_keysymTable[SDLK_KP_4] = XBMCK_KP4;
+    s_keysymTable[SDLK_KP_5] = XBMCK_KP5;
+    s_keysymTable[SDLK_KP_6] = XBMCK_KP6;
+    s_keysymTable[SDLK_KP_7] = XBMCK_KP7;
+    s_keysymTable[SDLK_KP_8] = XBMCK_KP8;
+    s_keysymTable[SDLK_KP_9] = XBMCK_KP9;
+    s_keysymTable[SDLK_KP_0] = XBMCK_KP0;
+    s_keysymTable[SDLK_KP_PERIOD] = XBMCK_KP_PERIOD;
+    s_keysymTable[SDLK_APPLICATION] = XBMCK_LAUNCH_APP1;
+    s_keysymTable[SDLK_POWER] = XBMCK_POWER;
+    s_keysymTable[SDLK_KP_EQUALS] = XBMCK_KP_EQUALS;
+    s_keysymTable[SDLK_F13] = XBMCK_F13;
+    s_keysymTable[SDLK_F14] = XBMCK_F14;
+    s_keysymTable[SDLK_F15] = XBMCK_F15;
+/*
+    s_keysymTable[SDLK_F16] = XBMCK_F16;
+    s_keysymTable[SDLK_F17] = XBMCK_F17;
+    s_keysymTable[SDLK_F18] = XBMCK_F18;
+    s_keysymTable[SDLK_F19] = XBMCK_F19;
+    s_keysymTable[SDLK_F20] = XBMCK_F20;
+    s_keysymTable[SDLK_F21] = XBMCK_F21;
+    s_keysymTable[SDLK_F22] = XBMCK_F22;
+    s_keysymTable[SDLK_F23] = XBMCK_F23;
+    s_keysymTable[SDLK_F24] = XBMCK_F24;
+    s_keysymTable[SDLK_EXECUTE] = XBMCK_EXECUTE;
+*/
+    s_keysymTable[SDLK_HELP] = XBMCK_HELP;
+    s_keysymTable[SDLK_MENU] = XBMCK_MENU;
+/*
+    s_keysymTable[SDLK_SELECT] = XBMCK_SELECT;
+    s_keysymTable[SDLK_STOP] = XBMCK_STOP;
+    s_keysymTable[SDLK_AGAIN] = XBMCK_AGAIN;
+    s_keysymTable[SDLK_UNDO] = XBMCK_UNDO;
+    s_keysymTable[SDLK_CUT] = XBMCK_CUT;
+    s_keysymTable[SDLK_COPY] = XBMCK_COPY;
+    s_keysymTable[SDLK_PASTE] = XBMCK_PASTE;
+    s_keysymTable[SDLK_FIND] = XBMCK_FIND;
+*/
+    s_keysymTable[SDLK_MUTE] = XBMCK_VOLUME_MUTE;
+    s_keysymTable[SDLK_VOLUMEUP] = XBMCK_VOLUME_UP;
+    s_keysymTable[SDLK_VOLUMEDOWN] = XBMCK_VOLUME_DOWN;
+/*
+    s_keysymTable[SDLK_KP_COMMA] = XBMCK_KP_COMMA;
+    s_keysymTable[SDLK_KP_EQUALSAS400] = XBMCK_KP_EQUALSAS400;
+    s_keysymTable[SDLK_ALTERASE] = XBMCK_ALTERASE;
+*/
+    s_keysymTable[SDLK_SYSREQ] = XBMCK_SYSREQ;
+/*
+    s_keysymTable[SDLK_CANCEL] = XBMCK_CANCEL;
+*/
+    s_keysymTable[SDLK_CLEAR] = XBMCK_CLEAR;
+/*
+    s_keysymTable[SDLK_PRIOR] = XBMCK_PRIOR;
+    s_keysymTable[SDLK_RETURN2] = XBMCK_RETURN2;
+    s_keysymTable[SDLK_SEPARATOR] = XBMCK_SEPARATOR;
+    s_keysymTable[SDLK_OUT] = XBMCK_OUT;
+    s_keysymTable[SDLK_OPER] = XBMCK_OPER;
+    s_keysymTable[SDLK_CLEARAGAIN] = XBMCK_CLEARAGAIN;
+    s_keysymTable[SDLK_CRSEL] = XBMCK_CRSEL;
+    s_keysymTable[SDLK_EXSEL] = XBMCK_EXSEL;
+    s_keysymTable[SDLK_KP_00] = XBMCK_KP_00;
+    s_keysymTable[SDLK_KP_000] = XBMCK_KP_000;
+    s_keysymTable[SDLK_THOUSANDSSEPARATOR] = XBMCK_THOUSANDSSEPARATOR;
+    s_keysymTable[SDLK_DECIMALSEPARATOR] = XBMCK_DECIMALSEPARATOR;
+    s_keysymTable[SDLK_CURRENCYUNIT] = XBMCK_CURRENCYUNIT;
+    s_keysymTable[SDLK_CURRENCYSUBUNIT] = XBMCK_CURRENCYSUBUNIT;
+    s_keysymTable[SDLK_KP_LEFTPAREN] = XBMCK_KP_LEFTPAREN;
+    s_keysymTable[SDLK_KP_RIGHTPAREN] = XBMCK_KP_RIGHTPAREN;
+    s_keysymTable[SDLK_KP_LEFTBRACE] = XBMCK_KP_LEFTBRACE;
+    s_keysymTable[SDLK_KP_RIGHTBRACE] = XBMCK_KP_RIGHTBRACE;
+    s_keysymTable[SDLK_KP_TAB] = XBMCK_KP_TAB;
+    s_keysymTable[SDLK_KP_BACKSPACE] = XBMCK_KP_BACKSPACE;
+    s_keysymTable[SDLK_KP_A] = XBMCK_KP_A;
+    s_keysymTable[SDLK_KP_B] = XBMCK_KP_B;
+    s_keysymTable[SDLK_KP_C] = XBMCK_KP_C;
+    s_keysymTable[SDLK_KP_D] = XBMCK_KP_D;
+    s_keysymTable[SDLK_KP_E] = XBMCK_KP_E;
+    s_keysymTable[SDLK_KP_F] = XBMCK_KP_F;
+    s_keysymTable[SDLK_KP_XOR] = XBMCK_KP_XOR;
+    s_keysymTable[SDLK_KP_POWER] = XBMCK_KP_POWER;
+    s_keysymTable[SDLK_KP_PERCENT] = XBMCK_KP_PERCENT;
+    s_keysymTable[SDLK_KP_LESS] = XBMCK_KP_LESS;
+    s_keysymTable[SDLK_KP_GREATER] = XBMCK_KP_GREATER;
+    s_keysymTable[SDLK_KP_AMPERSAND] = XBMCK_KP_AMPERSAND;
+    s_keysymTable[SDLK_KP_DBLAMPERSAND] = XBMCK_KP_DBLAMPERSAND;
+    s_keysymTable[SDLK_KP_VERTICALBAR] = XBMCK_KP_VERTICALBAR;
+    s_keysymTable[SDLK_KP_DBLVERTICALBAR] = XBMCK_KP_DBLVERTICALBAR;
+    s_keysymTable[SDLK_KP_COLON] = XBMCK_KP_COLON;
+    s_keysymTable[SDLK_KP_HASH] = XBMCK_KP_HASH;
+    s_keysymTable[SDLK_KP_SPACE] = XBMCK_KP_SPACE;
+    s_keysymTable[SDLK_KP_AT] = XBMCK_KP_AT;
+    s_keysymTable[SDLK_KP_EXCLAM] = XBMCK_KP_EXCLAM;
+    s_keysymTable[SDLK_KP_MEMSTORE] = XBMCK_KP_MEMSTORE;
+    s_keysymTable[SDLK_KP_MEMRECALL] = XBMCK_KP_MEMRECALL;
+    s_keysymTable[SDLK_KP_MEMCLEAR] = XBMCK_KP_MEMCLEAR;
+    s_keysymTable[SDLK_KP_MEMADD] = XBMCK_KP_MEMADD;
+    s_keysymTable[SDLK_KP_MEMSUBTRACT] = XBMCK_KP_MEMSUBTRACT;
+    s_keysymTable[SDLK_KP_MEMMULTIPLY] = XBMCK_KP_MEMMULTIPLY;
+    s_keysymTable[SDLK_KP_MEMDIVIDE] = XBMCK_KP_MEMDIVIDE;
+    s_keysymTable[SDLK_KP_PLUSMINUS] = XBMCK_KP_PLUSMINUS;
+    s_keysymTable[SDLK_KP_CLEAR] = XBMCK_KP_CLEAR;
+    s_keysymTable[SDLK_KP_CLEARENTRY] = XBMCK_KP_CLEARENTRY;
+    s_keysymTable[SDLK_KP_BINARY] = XBMCK_KP_BINARY;
+    s_keysymTable[SDLK_KP_OCTAL] = XBMCK_KP_OCTAL;
+    s_keysymTable[SDLK_KP_DECIMAL] = XBMCK_KP_DECIMAL;
+    s_keysymTable[SDLK_KP_HEXADECIMAL] = XBMCK_KP_HEXADECIMAL;
+*/
+    s_keysymTable[SDLK_LCTRL] = XBMCK_LCTRL;
+    s_keysymTable[SDLK_LSHIFT] = XBMCK_LSHIFT;
+    s_keysymTable[SDLK_LALT] = XBMCK_LALT;
+    s_keysymTable[SDLK_LGUI] = XBMCK_LSUPER;
+    s_keysymTable[SDLK_RCTRL] = XBMCK_RCTRL;
+    s_keysymTable[SDLK_RSHIFT] = XBMCK_RSHIFT;
+    s_keysymTable[SDLK_RALT] = XBMCK_RALT;
+    s_keysymTable[SDLK_RGUI] = XBMCK_RSUPER;
+    s_keysymTable[SDLK_MODE] = XBMCK_MODE;
+    s_keysymTable[SDLK_AUDIONEXT] = XBMCK_MEDIA_NEXT_TRACK;
+    s_keysymTable[SDLK_AUDIOPREV] = XBMCK_MEDIA_PREV_TRACK;
+    s_keysymTable[SDLK_AUDIOSTOP] = XBMCK_MEDIA_STOP;
+    s_keysymTable[SDLK_AUDIOPLAY] = XBMCK_MEDIA_PLAY_PAUSE;
+    s_keysymTable[SDLK_AUDIOMUTE] = XBMCK_VOLUME_MUTE;
+    s_keysymTable[SDLK_MEDIASELECT] = XBMCK_LAUNCH_MEDIA_SELECT;
+    s_keysymTable[SDLK_WWW] = XBMCK_BROWSER_HOME;
+    s_keysymTable[SDLK_MAIL] = XBMCK_LAUNCH_MAIL;
+    s_keysymTable[SDLK_CALCULATOR] = XBMCK_LAUNCH_APP1;
+    s_keysymTable[SDLK_COMPUTER] = XBMCK_LAUNCH_FILE_BROWSER;
+    s_keysymTable[SDLK_AC_SEARCH] = XBMCK_BROWSER_SEARCH;
+    s_keysymTable[SDLK_AC_HOME] = XBMCK_BROWSER_HOME;
+    s_keysymTable[SDLK_AC_BACK] = XBMCK_BROWSER_BACK;
+    s_keysymTable[SDLK_AC_FORWARD] = XBMCK_BROWSER_FORWARD;
+    s_keysymTable[SDLK_AC_STOP] = XBMCK_BROWSER_STOP;
+    s_keysymTable[SDLK_AC_REFRESH] = XBMCK_BROWSER_REFRESH;
+    s_keysymTable[SDLK_AC_BOOKMARKS] = XBMCK_BROWSER_FAVORITES;
+/*
+    s_keysymTable[SDLK_BRIGHTNESSDOWN] = XBMCK_BRIGHTNESSDOWN;
+    s_keysymTable[SDLK_BRIGHTNESSUP] = XBMCK_BRIGHTNESSUP;
+    s_keysymTable[SDLK_DISPLAYSWITCH] = XBMCK_DISPLAYSWITCH;
+    s_keysymTable[SDLK_KBDILLUMTOGGLE] = XBMCK_KBDILLUMTOGGLE;
+    s_keysymTable[SDLK_KBDILLUMDOWN] = XBMCK_KBDILLUMDOWN;
+    s_keysymTable[SDLK_KBDILLUMUP] = XBMCK_KBDILLUMUP;
+*/
+    s_keysymTable[SDLK_EJECT] = XBMCK_EJECT;
+    s_keysymTable[SDLK_SLEEP] = XBMCK_SLEEP;
+}
+
+static XBMCKey LookupKeysym(SDL_Keycode keycode)
+{
+	if (s_keysymTable.size() == 0) {
+		InitializeKeysymLookup();
+	}
+
+	std::map<SDL_Keycode, XBMCKey>::iterator it = s_keysymTable.find(keycode);
+	if (it != s_keysymTable.end()) {
+		return it->second;
+	}
+	return XBMCK_UNKNOWN;
+}
+
+#endif // SDL 2.0
+
 bool CWinEventsSDL::MessagePump()
 {
   SDL_Event event;
@@ -245,6 +515,7 @@
         break;
 #endif
 
+#if HAVE_SDL_VERSION == 1
       case SDL_ACTIVEEVENT:
         //If the window was inconified or restored
         if( event.active.state & SDL_APPACTIVE )
@@ -286,7 +557,7 @@
           mod |= XBMCKMOD_LSUPER;
         newEvent.key.keysym.mod = (XBMCMod) mod;
 
-#if defined(TARGET_POSIX) && !defined(TARGET_DARWIN)
+#ifdef HAVE_X11
         // If the keysym.sym is zero try to get it from the scan code
         if (newEvent.key.keysym.sym == 0)
           newEvent.key.keysym.sym = (XBMCKey) SymFromScancode(newEvent.key.keysym.scancode);
@@ -369,6 +640,7 @@
         ret |= g_application.OnEvent(newEvent);
         break;
       }
+
       case SDL_VIDEORESIZE:
       {
         // Under linux returning from fullscreen, SDL sends an extra event to resize to the desktop
@@ -389,6 +661,140 @@
         g_windowManager.MarkDirty();
         break;
       }
+
+      case SDL_VIDEOEXPOSE:
+      {
+        g_windowManager.MarkDirty();
+        break;
+      }
+#endif // SDL 1.2
+
+#if HAVE_SDL_VERSION == 2
+      case SDL_WINDOWEVENT:
+      {
+        switch( event.window.event )
+        {
+        case SDL_WINDOWEVENT_MINIMIZED:
+          if (g_application.GetRenderGUI())
+          {
+            g_application.SetRenderGUI(false);
+            g_Windowing.NotifyAppActiveChange(g_application.GetRenderGUI());
+          }
+          break;
+        case SDL_WINDOWEVENT_RESTORED:
+          if (!g_application.GetRenderGUI())
+          {
+            g_application.SetRenderGUI(true);
+            g_Windowing.NotifyAppActiveChange(g_application.GetRenderGUI());
+          }
+          break;
+        case SDL_WINDOWEVENT_FOCUS_GAINED:
+          g_application.m_AppFocused = true;
+          g_Windowing.NotifyAppFocusChange(g_application.m_AppFocused);
+          break;
+        case SDL_WINDOWEVENT_FOCUS_LOST:
+          g_application.m_AppFocused = false;
+          g_Windowing.NotifyAppFocusChange(g_application.m_AppFocused);
+          break;
+        }
+        break;
+      }
+
+      case SDL_KEYDOWN:
+      {
+        // process any platform specific shortcuts before handing off to XBMC
+#ifdef TARGET_DARWIN_OSX
+        if (ProcessOSXShortcuts(event))
+        {
+          ret = true;
+          break;
+        }
+#endif
+
+        XBMC_Event newEvent;
+        newEvent.type = XBMC_KEYDOWN;
+        newEvent.key.keysym.scancode = event.key.keysym.scancode;
+        newEvent.key.keysym.sym = LookupKeysym(event.key.keysym.sym);
+        newEvent.key.keysym.unicode = 0;
+        newEvent.key.state = event.key.state;
+
+        // Check if the Windows keys are down because SDL doesn't flag this.
+        uint16_t mod = event.key.keysym.mod;
+        const uint8_t* keystate = SDL_GetKeyboardState(NULL);
+        if (keystate[SDL_SCANCODE_LGUI] || keystate[SDL_SCANCODE_RGUI])
+          mod |= XBMCKMOD_LSUPER;
+        newEvent.key.keysym.mod = (XBMCMod) mod;
+
+#ifdef HAVE_X11
+        // If the keysym.sym is zero try to get it from the scan code
+        if (newEvent.key.keysym.sym == 0)
+          newEvent.key.keysym.sym = (XBMCKey) SymFromScancode(newEvent.key.keysym.scancode);
+#endif
+
+        // don't handle any more messages in the queue until we've handled keydown,
+        // if a keyup is in the queue it will reset the keypress before it is handled.
+        ret |= g_application.OnEvent(newEvent);
+        break;
+      }
+
+      case SDL_KEYUP:
+      {
+        XBMC_Event newEvent;
+        newEvent.type = XBMC_KEYUP;
+        newEvent.key.keysym.scancode = event.key.keysym.scancode;
+        newEvent.key.keysym.sym = LookupKeysym(event.key.keysym.sym);
+        newEvent.key.keysym.mod =(XBMCMod) event.key.keysym.mod;
+        newEvent.key.keysym.unicode = 0;
+        newEvent.key.state = event.key.state;
+
+        ret |= g_application.OnEvent(newEvent);
+        break;
+      }
+
+      case SDL_MOUSEBUTTONDOWN:
+      {
+        XBMC_Event newEvent;
+        newEvent.type = XBMC_MOUSEBUTTONDOWN;
+        newEvent.button.button = event.button.button;
+        newEvent.button.state = event.button.state;
+        newEvent.button.which = event.button.which;
+        newEvent.button.x = event.button.x;
+        newEvent.button.y = event.button.y;
+
+        ret |= g_application.OnEvent(newEvent);
+        break;
+      }
+
+      case SDL_MOUSEBUTTONUP:
+      {
+        XBMC_Event newEvent;
+        newEvent.type = XBMC_MOUSEBUTTONUP;
+        newEvent.button.button = event.button.button;
+        newEvent.button.state = event.button.state;
+        newEvent.button.which = event.button.which;
+        newEvent.button.x = event.button.x;
+        newEvent.button.y = event.button.y;
+
+        ret |= g_application.OnEvent(newEvent);
+        break;
+      }
+
+      case SDL_MOUSEMOTION:
+      {
+        XBMC_Event newEvent;
+        newEvent.type = XBMC_MOUSEMOTION;
+        newEvent.motion.xrel = event.motion.xrel;
+        newEvent.motion.yrel = event.motion.yrel;
+        newEvent.motion.state = event.motion.state;
+        newEvent.motion.which = event.motion.which;
+        newEvent.motion.x = event.motion.x;
+        newEvent.motion.y = event.motion.y;
+
+        ret |= g_application.OnEvent(newEvent);
+        break;
+      }
+#endif // SDL 2.0
+
       case SDL_USEREVENT:
       {
         XBMC_Event newEvent;
@@ -397,9 +803,6 @@
         ret |= g_application.OnEvent(newEvent);
         break;
       }
-      case SDL_VIDEOEXPOSE:
-        g_windowManager.MarkDirty();
-        break;
     }
     memset(&event, 0, sizeof(SDL_Event));
   }
@@ -409,11 +812,16 @@
 
 size_t CWinEventsSDL::GetQueueSize()
 {
-  int ret;
-  SDL_Event event;
+  int ret = 0;
 
-  if (-1 == (ret = SDL_PeepEvents(&event, 0, SDL_PEEKEVENT, ~0)))
+#if HAVE_SDL_VERSION == 1
+  if (-1 == (ret = SDL_PeepEvents(NULL, 0, SDL_PEEKEVENT, ~0)))
     ret = 0;
+#endif
+#if HAVE_SDL_VERSION == 2
+  if (-1 == (ret = SDL_PeepEvents(NULL, 0, SDL_PEEKEVENT, SDL_FIRSTEVENT, SDL_LASTEVENT)))
+    ret = 0;
+#endif
 
   return ret;
 }
diff -ruN -x .git kodi.old/xbmc/windowing/WinEventsSDL.h kodi/xbmc/windowing/WinEventsSDL.h
--- kodi.old/xbmc/windowing/WinEventsSDL.h	2016-01-31 01:08:45.700600173 -0800
+++ kodi/xbmc/windowing/WinEventsSDL.h	2016-01-31 01:09:16.353783633 -0800
@@ -28,7 +28,7 @@
 #if HAVE_SDL_VERSION == 1
 #include <SDL/SDL_events.h>
 #elif HAVE_SDL_VERSION == 2
-#include <SDL/SDL_events.h>
+#include <SDL2/SDL_events.h>
 #endif
 
 #include "WinEvents.h"
